import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";

import { AppDataProvider } from "@/Context/AppDataContext";
import ThemeProvider from "@/Components/ThemeProvider";
import ClientOnly from "@/Components/ClientOnly";

/**
 * LAYOUT PRINCIPAL (layout.tsx)
 * Este es el layout ra√≠z que envuelve toda la aplicaci√≥n
 * Se ejecuta en cada p√°gina y define la estructura HTML b√°sica
 * Es el lugar ideal para proveedores de contexto globales
 */

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Example App in NextJS",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  // Console.info para rastrear la carga del layout principal
  console.info('üé® [LAYOUT] Inicializando Layout Principal - Aplica a todas las rutas');

  return (
    <html lang="en">
      <head>
        <script
          dangerouslySetInnerHTML={{
            __html: `
              try {
                const theme = localStorage.getItem('app-theme');
                if (theme === 'dark') {
                  document.documentElement.classList.add('dark');
                }
              } catch (e) {}
            `,
          }}
        />
      </head>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <AppDataProvider>
          <ThemeProvider>
            <ClientOnly>
              {children}
            </ClientOnly>
          </ThemeProvider>
        </AppDataProvider>
      </body>
    </html>
  );
}
